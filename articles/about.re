= ユニットテスト(単体テスト)とは

== ざっくりと、おさらい
改めて、ユニットテスト(単体テスト)とは何でしょうか。Wikipediaには
//quote{
ソースコードの個々のユニット、すなわち、1つ以上のコンピュータプログラムモジュールが使用に適しているかどうかを決定するために、関連する制御データ、使用手順、操作手順とともにテストする手法である[1]
//}
とあります。

もう一つ、テスト技法の書籍には以下のような説明がされております。
//quote{
ソフトェアの最小単位であるモジュールごとに行うテストです。主に詳細設計書どおりにモジュールが動くかどうかをテストし、コーディングされたソフトウェアの論理構造が適切かを確認します。多くの場合、単体テストはコーディングを行なったプログラマ自身が担当します。
//}
とあります。

どれも調べると大きく定義が異なることはありません。
まとめると、主な特徴としては以下のようになると思います。

* コード作成時に開発者自身が担当する
*
*
*

といった感じでしょうか。

== V字モデル

また、プログラミングを始めたころ、このような図を書いてテストと実作業との関連性を教えてもらいました。

//image[v_model][V字モデル(システム開発ライフサイクル)][scale=0.5]{
//}

これは@<b>{V字モデル}と呼ばれるもので、各設計フェーズの要件を満たしているかの確認を行うテスト手法が各々存在するということです。時間軸としては左から右に進んでいくため@<b>{システム開発ライフサイクル}として説明される図でもあります。
この図で言うと、単体テストは詳細設計の要件を全て満たしているかを確認するテストであるとも言えます。

=== 改めて、詳細設計とは
ここで登場した@<b>{詳細設計}についてもザッとおさらいすると

//quote{
ソフトウェアや情報システムの開発工程の一つで、前工程で定義された要素の仕様や動作の詳細を定義する工程。
(IT用語辞典 より引用)
//}
→ここは持ってるソフトウェアテストの本より引用する

とあります。基本設計で決められた動きを、どのように実現するのかを決めるフェーズであり、システムの詳細を決めるため「詳細設計」と呼ばれます。
→もう少し調べて要約をまとめる

== iOS開発におけるユニットテストとは
では実際にどのようにテストを実施するか、一般的には@<b>{テストコード}と呼ばれるテストのためのコーディングを行い、ビルド実行と同様にテストを実行することで、どのテストが成功or失敗したかを確認する方法があります。

しかし、冒頭で書きました通り、私がこれまで常駐してきた現場ではテストコードを使ってきませんでした。理由としては


などがあると思っており
しかし結果としてリリース後に発覚する不具合の原因というのは「アプリ側の単体テスト時に見落としていた不具合」

- iOSにおけるUnit Testとは
  - XCTest Framework
  ・部分的にテストもできるよ
  ・ブレークポイント使えるよ
  - そのた便利なOSSも多くあります
